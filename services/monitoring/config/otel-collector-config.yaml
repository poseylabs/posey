receivers:
  otlp:
    protocols:
      grpc:
      http:
  
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']
        - job_name: 'node-services'
          scrape_interval: 10s
          static_configs:
            - targets: ['host.docker.internal:9464']  # Default Node.js exporter port
        - job_name: 'prometheus'
          scrape_interval: 10s
          static_configs:
            - targets: ['prometheus:9090']

  hostmetrics:
    collection_interval: 30s
    scrapers:
      cpu:
      disk:
      load:
      filesystem:
      memory:
      network:
      paging:
      process:

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
  
  memory_limiter:
    check_interval: 1s
    limit_mib: 1000
    spike_limit_mib: 200

  resource:
    attributes:
      - key: service.namespace
        value: "posey"
        action: upsert

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
  
  otlp:
    endpoint: "tempo:4317"
    tls:
      insecure: true
  
  otlphttp:
    endpoint: "http://tempo:4318"
  
  loki:
    endpoint: "http://loki:3100/loki/api/v1/push"
    tenant_id: "posey"
    labels:
      resource:
        service.name: "service_name"
        service.namespace: "service_namespace"
      attributes:
        level: "severity"

service:
  pipelines:
    metrics:
      receivers: [otlp, prometheus, hostmetrics]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus]
    
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [otlp]
    
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [loki]