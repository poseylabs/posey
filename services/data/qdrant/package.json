{
  "name": "@posey.ai/qdrant",
  "version": "1.0.0-beta.1",
  "type": "module",
  "scripts": {
    "deploy": "bash ../../scripts/k8s-deploy.sh qdrant",
    "redeploy": "bash ../../scripts/k8s-deploy.sh --clean qdrant",
    "verify": "kubectl get pods -n posey -l app=qdrant && kubectl get services -n posey -l app=qdrant",
    "docker:build": "docker build -t registry.digitalocean.com/posey/qdrant:latest .",
    "docker:push": "docker push registry.digitalocean.com/posey/qdrant:latest",
    "docker:deploy": "yarn docker:build && yarn docker:push",
    "docker:init": "node scripts/init-collections.js",
    "docker:start": "docker run -d --name qdrant -p 1111:1111 -p 6334:6334 -v $(pwd)/storage:/qdrant/storage registry.digitalocean.com/posey/qdrant:latest",
    "docker:stop": "docker stop qdrant && docker rm qdrant",
    "docker:logs": "docker logs qdrant",
    "build:local": "echo 'ðŸ”¨ Building Docker image posey-qdrant:latest...' && docker build -t posey-qdrant:latest .",
    "k8s:check": "kubectl cluster-info > /dev/null 2>&1 || (echo 'Error: Kubernetes cluster not accessible. Please ensure:'; echo '1. Kubernetes is running (minikube, kind, etc.)'; echo '2. kubectl is configured correctly'; echo '3. Your VPN is connected if using a remote cluster'; exit 1)",
    "connect": "echo 'Qdrant is available at: http://localhost:1111'"
  },
  "dependencies": {
    "@qdrant/js-client-rest": "^1.12.0",
    "dotenv": "^16.4.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  }
}