name: posey_services

x-environment:
  # APP
  &shared-environment
  AGENTS_SERVICE_URL: ${AGENTS_SERVICE_URL:-http://posey-agents:5555}
  AUTH_BASE_URL: ${AUTH_BASE_URL}

  NODE_ENV: "${NODE_ENV}"

  # Couchbase
  COUCHBASE_USER: ${COUCHBASE_USER:-admin}
  COUCHBASE_PASSWORD: ${COUCHBASE_PASSWORD:-password}
  COUCHBASE_BUCKET: ${COUCHBASE_BUCKET:-posey}
  COUCHBASE_URL: ${COUCHBASE_URL:-couchbase://couchbase}
  COUCHBASE_SCOPE: ${COUCHBASE_SCOPE:-_default}
  COUCHBASE_COLLECTION: ${COUCHBASE_COLLECTION:-_default}

  # Cron
  CRON_PORT: ${CRON_PORT:-2222}

  # Models
  EMBEDDING_MODEL: ${EMBEDDING_MODEL:-BAAI/bge-large-en-v1.5}
  EMBEDDING_CACHE_DIR: ${EMBEDDING_CACHE_DIR:-/app/models}

  # Postgres
  POSTGRES_DB_POSEY: "${POSTGRES_DB_POSEY}"
  POSTGRES_DB_SUPERTOKENS: "${POSTGRES_DB_SUPERTOKENS}"
  POSTGRES_DSN_POSEY: ${POSTGRES_DSN_POSEY}
  POSTGRES_HOST: "${POSTGRES_HOST}"
  POSTGRES_PORT: "${POSTGRES_PORT}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  POSTGRES_USER: "${POSTGRES_USER}"

  # Python
  PYTHONPATH: ${PYTHONPATH:-/app/service}

  # Qdrant
  QDRANT_HOST: ${QDRANT_HOST:-http://posey-qdrant:1111}
  QDRANT_URL: ${QDRANT_URL}
  QDRANT_PORT: ${QDRANT_PORT:-1111}

  # Security
  ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
  JWT_SECRET_KEY: ${JWT_SECRET_KEY}

  # Voyager
  VOYAGER_PORT: ${VOYAGER_PORT:-7777}
  VOYAGER_DOMAIN: ${VOYAGER_DOMAIN:-localhost}

services:

  # Agent Service + Agent API
  posey-agents:
    container_name: posey-agents
    build:
      context: ../
      dockerfile: services/agents/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_PORT: ${POSTGRES_PORT:-3333}
        POSTGRES_DB_POSEY: ${POSTGRES_DB_POSEY}
        PYTHONPATH: ${PYTHONPATH}

    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      <<: *shared-environment
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
    networks:
      - posey.net
    volumes:
      - ./agents:/app/service:delegated
      - agents_data:/app/data
      - agents_models:/app/models
      - ./agents/app:/app/service/app:delegated
      - ./agents/tests:/app/service/tests:delegated
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5555/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    command: uvicorn app.main:app --host 0.0.0.0 --port 5555 --reload --reload-dir /app/service

  # Auth Service (SuperToken wrapper)
  posey-auth:
    container_name: posey-auth
    build:
      context: ../
      dockerfile: services/auth/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
    ports:
      - '${AUTH_PORT:-9999}:${AUTH_PORT:-9999}'
    env_file:
      - .env
    environment:
      <<: *shared-environment
      SUPERTOKENS_CONNECTION_URI: "http://posey-supertokens:${SUPER_TOKENS_PORT:-3567}"
      POSTGRES_DB_POSEY: ${POSTGRES_DB_POSEY}
      POSTGRES_DB_SUPERTOKENS: ${POSTGRES_DB_SUPERTOKENS}
    networks:
      - posey.net
    volumes:
      - ./auth:/app/service
      - auth_data:/app/data

  # Cron Service
  posey-cron:
    container_name: posey-cron
    build:
      context: ../
      dockerfile: services/cron/Dockerfile
      args:
        BUILDKIT_STEP_LOG_MAX_SIZE: "10485760"
        BUILDKIT_INLINE_CACHE: 1
        DOCKER_BUILDKIT: 1
    env_file:
      - .env
    environment: *shared-environment
    networks:
      - posey.net
    volumes:
      - ./app:/app/cron/src
      - cron_logs:/app/logs
      - cron_data:/app/data
    ports:
      - "2222:2222"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:2222/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # SuperTokens auth service
  posey-supertokens:
    container_name: posey-supertokens
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    ports:
      - "${SUPER_TOKENS_PORT:-3567}:${SUPER_TOKENS_PORT:-3567}"
    networks:
      - posey.net
    env_file:
      - .env
    environment:
      <<: *shared-environment
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  # Voyager Service
  posey-voyager:
    container_name: posey-voyager
    build:
      context: ../
      dockerfile: services/voyager/Dockerfile
    ports:
      - ${VOYAGER_PORT:-7777}:${VOYAGER_PORT:-7777}
    env_file:
      - ./.env
    environment: *shared-environment
    volumes:
      - ./voyager/src:/src
      - voyager_data:/src/data
      - voyager_cache:/src/cache
    networks:
      - posey.net
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 1G

  posey-mcp:
    container_name: posey-mcp
    build:
      context: ../
      dockerfile: services/mcp/Dockerfile
    ports:
      - "5050:5050"
    environment:
      - AGENTS_SERVICE_URL=http://posey-agents:5555
      - MCP_PORT=5050
      - LOG_LEVEL=INFO
    networks:
      - posey.net
    depends_on:
      - posey-agents
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5050/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    volumes:
      - ./mcp:/app/service:delegated
      - mcp_data:/src/data
      - ./mcp/app:/app/service/app:delegated

volumes:
  agents_data:
    name: posey_agents_data
  agents_models:
    name: posey_agents_models
  auth_data:
    name: posey_auth_data
  cron_data:
    name: posey_cron_data
  cron_logs:
    name: posey_cron_logs
  mcp_data:
    name: posey_mcp_data
  voyager_data:
    name: posey_voyager_data
  voyager_cache:
    name: posey_voyager_cache

networks:
  posey.net:
    name: posey.net
    external: true
    driver: bridge
