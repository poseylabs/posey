{
  "name": "@posey.ai/services",
  "version": "1.0.0-alpha.2",
  "type": "module",
  "license": "AGPL-3.0",
  "scripts": {
    "build": "node --loader ts-node/esm scripts/build.ts && node --loader ts-node/esm scripts/deploy.ts --skip-deploy",
    "build:local": "node --loader ts-node/esm scripts/build.ts --local && node --loader ts-node/esm scripts/deploy.ts --local --skip-deploy",
    "build:local:continue": "node --loader ts-node/esm scripts/build.ts --local --continue-on-error && node --loader ts-node/esm scripts/deploy.ts --local --skip-deploy",
    "build:clean": "node --loader ts-node/esm scripts/clean.ts && node --loader ts-node/esm scripts/build.ts --local && node --loader ts-node/esm scripts/deploy.ts --local --skip-deploy",
    "deploy": "node --loader ts-node/esm scripts/build.ts && node --loader ts-node/esm scripts/deploy.ts",
    "deploy:local": "node --loader ts-node/esm scripts/build.ts --local && node --loader ts-node/esm scripts/deploy.ts --local",
    "deploy:local:continue": "node --loader ts-node/esm scripts/build.ts --local --continue-on-error && node --loader ts-node/esm scripts/deploy.ts --local",
    "deploy:clean": "node --loader ts-node/esm scripts/clean.ts && node --loader ts-node/esm scripts/build.ts --local && node --loader ts-node/esm scripts/deploy.ts --local",
    "clean": "node --loader ts-node/esm scripts/clean.ts",
    "start": "node --loader ts-node/esm scripts/start.ts",
    "start:local": "node --loader ts-node/esm scripts/start.ts --local",
    "docker:start": "docker compose up -d",
    "docker:stop": "docker compose down",
    "build:docker": "node --loader ts-node/esm scripts/build.ts --local",
    "build:agents": "docker compose build agents",
    "build:cron": "docker compose build cron",
    "build:ollama-small": "chmod +x ollama/scripts/setup-cache.sh && ./ollama/scripts/setup-cache.sh && docker compose build ollama-small",
    "build:ollama-large": "chmod +x ollama/scripts/setup-cache.sh && ./ollama/scripts/setup-cache.sh && docker compose build ollama-large",
    "dev": "node --loader ts-node/esm scripts/dev.ts",
    "dev:build": "node --loader ts-node/esm scripts/dev.ts --build-only",
    "dev:agents": "docker compose watch agents",
    "dev:cron": "docker compose watch cron",
    "dev:ingress": "node --loader ts-node/esm scripts/dev.ts && bash ../scripts/update-ingress.sh",
    "dev:connect": "node --loader ts-node/esm scripts/dev.ts && echo '‚è≥ Waiting for pods to become ready before setting up port forwarding...' && ./port-forward.sh",
    "stop": "docker compose down",
    "docker:dev": "docker compose up --build",
    "k8s:build": "node --loader ts-node/esm scripts/build.ts && node --loader ts-node/esm scripts/deploy.ts --skip-deploy",
    "k8s:build:local": "node --loader ts-node/esm scripts/build.ts --local && node --loader ts-node/esm scripts/deploy.ts --local --skip-deploy",
    "k8s:deploy": "node --loader ts-node/esm scripts/build.ts && node --loader ts-node/esm scripts/deploy.ts",
    "k8s:deploy:local": "node --loader ts-node/esm scripts/build.ts --local && node --loader ts-node/esm scripts/deploy.ts --local",
    "k8s:clean": "node --loader ts-node/esm scripts/clean.ts",
    "k8s:verify": "echo 'üîç Checking pods:' && kubectl get pods -n posey",
    "k8s:logs": "echo 'üìú Fetching logs for pods:' && kubectl logs -n posey -l part-of=posey-platform --tail=100",
    "k8s:restart": "node --loader ts-node/esm scripts/clean.ts && node --loader ts-node/esm scripts/build.ts --local && node --loader ts-node/esm scripts/deploy.ts --local",
    "ingress": "node --loader ts-node/esm ../scripts/apply-ingress.ts --local",
    "ports": "./port-forward-services.sh"
  },
  "devDependencies": {
    "@types/node": "^20.11.17",
    "chalk": "^5.4.1",
    "dotenv": "^16.4.7",
    "execa": "^9.5.2",
    "nodemon": "^3.1.9",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "yaml": "^2.7.0"
  }
}