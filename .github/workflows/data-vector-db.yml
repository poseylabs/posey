name: Build Vector DB Service

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    paths:
      - 'data/vector.db/**'
      - '.github/workflows/data-vector-db.yml'

env:
  DOCTL_VERSION: 1.92.1
  ENVIRONMENT: ${{ github.ref_name == 'main' && 'PRODUCTION' || 'STAGING' }}
  SERVICE: vector.db
  DOCKER_IMAGE_NAME: posey-vector-db
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain
  # Enable debug logging for npm and GitHub Actions
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true

jobs:
  build-vector-db:
    # Skip this job if it was triggered by the orchestrator
    if: github.event_name != 'workflow_dispatch' || !contains(github.actor, 'github-actions[bot]')
    name: Vector DB Job
    runs-on:
      group: posey-runners
    environment: PRODUCTION
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Reconfigure git to use HTTP instead of SSH
        run: |
          git config --global url."https://github.com/".insteadOf git@github.com:
          git config --global url."https://github.com/".insteadOf ssh://git@github.com/

      - name: Configure network
        run: |
          echo "Setting DNS cache TTL to improve networking..."
          echo "options single-request-reopen" | sudo tee -a /etc/resolv.conf
          echo "options timeout:10" | sudo tee -a /etc/resolv.conf
          # Increase TCP performance
          sudo sysctl -w net.ipv4.tcp_slow_start_after_idle=0
          sudo sysctl -w net.ipv4.tcp_fastopen=3
          
      - name: Install doctl
        run: |
          cd /tmp
          curl -sL --retry 5 --retry-delay 5 https://github.com/digitalocean/doctl/releases/download/v${{ env.DOCTL_VERSION }}/doctl-${{ env.DOCTL_VERSION }}-linux-arm64.tar.gz | tar -xzv
          sudo mv doctl /usr/local/bin/
          doctl version
          doctl auth init -t ${{ secrets.DO_API_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        timeout-minutes: 2
        run: |
          doctl registry login --expiry-seconds 7200
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.12.0
          buildkitd-flags: --debug
          
      - name: Docker Buildx Configuration
        run: |
          docker buildx create --name multiplatform-builder --driver docker-container --use --bootstrap
          docker buildx inspect
          
      - name: Debug directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Content of data directory:"
          ls -la data/
          echo "Content of data/vector.db directory:"
          ls -la data/vector.db/
          
      - name: Build Vector DB
        timeout-minutes: 60
        run: |
          # Create yarn logs directory
          mkdir -p yarn-logs
          
          echo "Building data service $SERVICE as $DOCKER_IMAGE_NAME..."
          
          # Build with Docker Buildx using root directory as context
          DOCKER_BUILDKIT=1 docker buildx build \
            --platform linux/amd64 \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg NODE_ENV=production \
            --build-arg BUILDKIT_MAX_PARALLELISM=4 \
            --build-arg YARN_ENABLE_TELEMETRY=false \
            --build-arg YARN_ENABLE_PROGRESS_BARS=false \
            --build-arg YARN_VERBOSE=true \
            --build-arg DEBUG="yarn*" \
            --progress=plain \
            --cache-from type=registry,ref=registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME}:buildcache \
            --cache-from registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME}:latest \
            --cache-from registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME}:${{ env.ENVIRONMENT }} \
            --cache-to type=registry,ref=registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME}:buildcache,mode=max \
            -t registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME}:latest \
            -t registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME}:${{ env.ENVIRONMENT }} \
            -t registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME}:$(echo $GITHUB_SHA | cut -c1-7) \
            -f data/vector.db/Dockerfile \
            --push \
            . 2>&1 | tee yarn-logs/build.log

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: yarn-logs-${{ github.sha }}
          path: yarn-logs
          retention-days: 5
          compression-level: 6
          
      - name: Verify image availability
        run: |
          echo "Verifying image availability in registry..."
          for i in {1..5}; do
            doctl registry repository list-tags ${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME} --format Tag && break || sleep 10
          done
          exit 0  # Ensure step doesn't fail if repository doesn't exist yet 