name: Build ML Base Image

on:
  workflow_dispatch:  # Manual trigger option
  push:
    branches:
      - main
      - develop
    paths:
      - 'services/agents/docker/ml-base/**'
      - '.github/workflows/docker-ml-base-image.yml'

env:
  DOCTL_VERSION: 1.92.1
  DO_REGISTRY_NAME: posey
  ML_BASE_IMAGE_NAME: agents-ml-base
  # Add Docker build parameters for better performance
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain
  # Add pip environment variables to help with installation
  PIP_TIMEOUT: 200
  PIP_DEFAULT_TIMEOUT: 200
  PIP_RETRIES: 5

jobs:
  build-ml-base:
    name: Build ML Base Image
    runs-on:
      group: posey-runners
    environment: PRODUCTION
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check system resources
        run: |
          echo "=== SYSTEM INFO ==="
          free -h
          df -h
          cat /proc/cpuinfo | grep "model name" | head -1
          cat /proc/meminfo | grep MemTotal
          echo "===================="
        
      - name: Install doctl
        run: |
          cd /tmp
          curl -sL --retry 5 --retry-delay 2 https://github.com/digitalocean/doctl/releases/download/v${{ env.DOCTL_VERSION }}/doctl-${{ env.DOCTL_VERSION }}-linux-arm64.tar.gz | tar -xzv
          sudo mv doctl /usr/local/bin/
          doctl version
          doctl auth init -t ${{ secrets.DO_API_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        run: |
          doctl registry login --expiry-seconds 7200
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.12.0
          
      - name: Docker Buildx Configuration
        run: |
          docker buildx create --name multiplatform-builder --driver docker-container --use
          docker buildx inspect --bootstrap
      
      - name: Modify Dockerfile for better diagnostics
        run: |
          # Add better error reporting and timeout handling to pip install command
          cd services/agents/docker/ml-base
          sed -i 's/RUN pip install --no-cache-dir -r ml-requirements.txt/RUN pip install --no-cache-dir --verbose -r ml-requirements.txt || (echo "PIP INSTALL FAILED" \&\& exit 1)/' Dockerfile
          echo "Modified Dockerfile:"
          cat Dockerfile
          
      - name: Build ML Base Image
        timeout-minutes: 60
        run: |
          # Change to ML base directory
          cd services/agents/docker/ml-base
          
          echo "Building ML base image..."
          
          # Get current date for versioning
          DATE_TAG=$(date +%Y%m%d)
          GIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          
          # Build with Docker Buildx - add memory limits and improved error handling
          docker buildx build \
            --platform linux/amd64 \
            --memory=14g \
            --memory-swap=16g \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg PIP_TIMEOUT=200 \
            --build-arg PIP_DEFAULT_TIMEOUT=200 \
            --build-arg PIP_RETRIES=5 \
            --cache-from registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${ML_BASE_IMAGE_NAME}:latest \
            -t registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${ML_BASE_IMAGE_NAME}:latest \
            -t registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${ML_BASE_IMAGE_NAME}:${DATE_TAG} \
            -t registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${ML_BASE_IMAGE_NAME}:${GIT_SHA} \
            -f Dockerfile \
            --push \
            . || (echo "BUILD FAILED - CHECKING LOGS" && docker logs $(docker ps -lq) && exit 1)
            
      - name: Verify ML Base Image
        run: |
          echo "Verifying ML base image was pushed successfully..."
          docker pull registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${ML_BASE_IMAGE_NAME}:latest
          echo "ML base image build and push successful!" 