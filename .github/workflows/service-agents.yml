name: Build Agents Service

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    paths:
      - 'services/agents/**'
      - '.github/workflows/service-agents.yml'
      - '!services/agents/docker/ml-base/**'

env:
  DOCTL_VERSION: 1.92.1
  ENVIRONMENT: ${{ github.ref_name == 'main' && 'PRODUCTION' || 'STAGING' }}
  SERVICE: agents
  DOCKER_IMAGE_NAME: posey-agents
  # Add Docker build environment variables to speed up builds
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain
  BUILDKIT_INLINE_CACHE: 1

jobs:
  check-ml-base:
    name: Check ML Base Image
    runs-on:
      group: posey-runners
    environment: PRODUCTION
    steps:
      - name: Install doctl
        run: |
          cd /tmp
          curl -sL https://github.com/digitalocean/doctl/releases/download/v${{ env.DOCTL_VERSION }}/doctl-${{ env.DOCTL_VERSION }}-linux-arm64.tar.gz | tar -xzv
          sudo mv doctl /usr/local/bin/
          doctl version
          doctl auth init -t ${{ secrets.DO_API_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        run: |
          doctl registry login --expiry-seconds 3600
      
      - name: Check if ML base image exists
        id: check-ml-base
        shell: bash
        run: |
          echo "Checking for ML base image..."
          
          # Define the correct image path
          ML_BASE_IMAGE="registry.digitalocean.com/posey/agents-ml-base:latest"
          
          # Simple check for the image
          echo "Looking for image: $ML_BASE_IMAGE"
          if docker manifest inspect $ML_BASE_IMAGE &>/dev/null; then
            echo "✅ Found ML base image"
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            # Try listing repository contents for debugging
            echo "⚠️ Image not found, checking repository contents:"
            doctl registry repository list || echo "Failed to list repositories"
            doctl registry repository list-tags agents-ml-base || echo "Failed to list tags"
            
            # Fail with clear error
            echo "❌ ML base image not found: $ML_BASE_IMAGE"
            echo "::error::ML Base Image not found! Please run the docker-ml-base-image workflow first."
            exit 1
          fi

  build-agents:
    name: Build Agents Service
    needs: check-ml-base
    runs-on:
      group: posey-runners
    environment: PRODUCTION
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install doctl
        run: |
          cd /tmp
          curl -sL https://github.com/digitalocean/doctl/releases/download/v${{ env.DOCTL_VERSION }}/doctl-${{ env.DOCTL_VERSION }}-linux-arm64.tar.gz | tar -xzv
          sudo mv doctl /usr/local/bin/
          doctl version
          doctl auth init -t ${{ secrets.DO_API_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        run: |
          doctl registry login --expiry-seconds 3600
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.12.0
          
      - name: Docker Buildx Configuration
        run: |
          docker buildx create --name multiplatform-builder --driver docker-container --use
          docker buildx inspect --bootstrap
          
      - name: Build Agents Service
        timeout-minutes: 60
        run: |
          # Change to service directory
          cd services/${SERVICE}
          
          echo "Building ${SERVICE}..."
          echo "System resources:"
          free -h || echo "free command not available"
          df -h
          
          # Pull latest base images to ensure cache is used
          docker pull registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/agents-ml-base:latest
          docker pull registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME:-$SERVICE}:latest || true
          
          # Build with Docker Buildx - using ML base image
          docker buildx build \
            --platform linux/amd64 \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME:-$SERVICE}:latest \
            --cache-from registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME:-$SERVICE}:${{ env.ENVIRONMENT }} \
            -t registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME:-$SERVICE}:latest \
            -t registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME:-$SERVICE}:${{ env.ENVIRONMENT }} \
            -t registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${DOCKER_IMAGE_NAME:-$SERVICE}:$(echo $GITHUB_SHA | cut -c1-7) \
            -f Dockerfile \
            --push \
            . 