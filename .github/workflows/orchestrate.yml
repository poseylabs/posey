name: Posey Build Orchestrator

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - 'services/*/Dockerfile'  # Individual services have their own workflows
      - 'data/*/Dockerfile'      # Data services have their own workflows
      - '.github/workflows/services/**'
      - '.github/workflows/data/**'

env:
  ENVIRONMENT: ${{ github.ref_name == 'main' && 'PRODUCTION' || 'STAGING' }}

jobs:
  trigger-service-builds:
    name: Trigger Service Builds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Trigger Individual Service Workflows
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Function to trigger workflow with error handling
          trigger_workflow() {
            SERVICE=$1
            TYPE=$2  # 'services' or 'data'
            
            echo "Triggering workflow for $TYPE service: $SERVICE"
            
            # Use the FULL path from the repository root
            # The correct format is .github/workflows/TYPE/SERVICE.yml
            gh workflow run .github/workflows/$TYPE/$SERVICE.yml --ref "${{ github.ref_name }}" || {
              echo "Failed to trigger workflow for $SERVICE"
              return 1
            }
            
            echo "Successfully triggered workflow for $SERVICE"
          }
          
          # Trigger service workflows
          SERVICES="voyager auth supertokens mcp agents cron"
          for SERVICE in $SERVICES; do
            trigger_workflow "$SERVICE" "services"
          done
          
          # Trigger data services workflows
          DATA_SERVICES="postgres vector-db couchbase"
          for SERVICE in $DATA_SERVICES; do
            trigger_workflow "$SERVICE" "data"
          done
