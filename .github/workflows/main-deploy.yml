name: Main Deployment Orchestrator

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  setup:
    name: Setup Kubernetes Connection
    runs-on: ubuntu-latest
    outputs:
      cluster-ready: ${{ steps.setup-k8s.outputs.success }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set up Kubernetes config
        id: setup-k8s
        run: |
          doctl kubernetes cluster kubeconfig save ${DO_CLUSTER_NAME}
          echo "success=true" >> $GITHUB_OUTPUT
        env:
          DO_CLUSTER_NAME: posey-cluster

  create-configs:
    name: Create ConfigMaps and Secrets
    needs: setup
    uses: ./.github/workflows/create-configs.yml
    secrets: inherit # Pass all secrets to the called workflow

  deploy-databases:
    name: Deploy Database Services
    needs: create-configs
    uses: ./.github/workflows/deploy-databases.yml
    secrets: inherit

  deploy-auth:
    name: Deploy Authentication Services
    needs: deploy-databases
    uses: ./.github/workflows/deploy-auth.yml
    secrets: inherit

  deploy-core-services:
    name: Deploy Core Services
    needs: deploy-auth
    uses: ./.github/workflows/deploy-core-services.yml
    secrets: inherit

  deploy-auxiliary-services:
    name: Deploy Auxiliary Services
    needs: deploy-core-services
    uses: ./.github/workflows/deploy-auxiliary-services.yml
    secrets: inherit

  deploy-frontend:
    name: Deploy Frontend Applications
    needs: deploy-core-services
    uses: ./.github/workflows/deploy-frontend.yml
    secrets: inherit

  verify-deployment:
    name: Verify Full Deployment
    needs: [deploy-auxiliary-services, deploy-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Kubernetes connection
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Connect to cluster
        run: doctl kubernetes cluster kubeconfig save posey-cluster
      
      - name: Verify all services
        run: |
          echo "All services deployed successfully!"
          kubectl get pods
          
          # Get external access URLs (if any)
          echo "External access URLs:"
          kubectl get services -o wide | grep LoadBalancer
          
          # Check if any pods are in a non-ready state
          if kubectl get pods | grep -v "Running\|Completed"; then
            echo "Warning: Some pods are not in Running state"
          else
            echo "All pods are running correctly!"
          fi 