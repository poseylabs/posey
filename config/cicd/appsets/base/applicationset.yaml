# /cicd/appsets/base/applicationset.yaml
# Base ApplicationSet template using Helm
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  # name will be patched by overlay (e.g., posey-data-services)
  name: posey-appset-base 
  # ApplicationSets live in the argocd namespace
  namespace: argocd
spec:
  # Define generators - overlay will set the specific directory path to check
  generators:
  - git:
      repoURL: https://github.com/poseylabs/posey.git
      revision: HEAD
      directories:
      # path will be patched by overlay (e.g., k8s/charts/data/*)
      - path: k8s/charts/placeholder/* 

  # Define the template for the ArgoCD Applications to be generated
  template:
    metadata:
      # Generate the Application name dynamically: posey-<chart-dir-name>
      name: posey-{{path.basename}}
      # Add standard labels
      labels:
        app: posey-{{path.basename}}
        argocd.argoproj.io/applicationset: posey-appset-placeholder # Patched by overlay
        category: placeholder # Patched by overlay
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      # Common project for all services
      project: posey

      # Source is now a Helm chart within the repo
      source:
        repoURL: https://github.com/poseylabs/posey.git
        targetRevision: HEAD
        # Path points to the chart directory discovered by the generator
        # e.g., k8s/charts/data/postgres
        chart: "{{path}}"
        # Helm-specific configuration
        helm:
          # Define GLOBAL parameters injectable into all charts generated by this set
          parameters:
          # --- Global Helm Values (Injected) --- 
          - name: global.image.registry
            value: docker.io/poseylabs
          - name: global.image.pullPolicy
            value: Always
          - name: global.replicaCount
            value: "1" # Needs to be a string for Helm parameters
          - name: global.service.type
            value: ClusterIP
          - name: global.serviceAccount.create
            value: "false" # Needs to be a string
          # Define GLOBAL default resource requests/limits
          - name: global.resources.requests.memory
            value: "512Mi"
          - name: global.resources.requests.cpu
            value: "250m"
          - name: global.resources.limits.memory
            value: "1Gi"
          - name: global.resources.limits.cpu
            value: "500m"
          # --- End Global Helm Values ---
          # Define values files to be merged by Helm
          valueFiles:
            # IMPORTANT: Base values file comes first
            - /k8s/charts/base-values.yaml # Use absolute path from repo root
            # Helm implicitly includes the chart's own values.yaml last
            # - values.yaml 
            # Potentially include environment-specific overrides later
            # - {{path}}/values-prod.yaml

      # Common destination for all services
      destination:
        server: https://kubernetes.default.svc
        namespace: posey

      # Common sync policy
      syncPolicy:
        automated:
          prune: false
          selfHeal: true
        syncOptions:
        - CreateNamespace=true
        # - Validate=false # Often not needed with Helm
        - ServerSideApply=true
        retry:
          limit: 3
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m 