version: 2.1

description: "Orb for building and deploying the Vector DB service"

# Use the common orb for shared executors and commands
orbs:
  common: posey/common@0.0.7

jobs:
  build-vector-db:
    executor: common/docker-builder
    steps:
      - common/setup-common
      - run:
          name: Pull existing images for cache
          command: |
            echo "Pulling existing images for caching..."
            docker pull registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:latest || echo "No latest image found"
            docker pull registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:buildcache || echo "No buildcache image found" 
            docker pull registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:PRODUCTION || echo "No PRODUCTION image found"
      - run:
          name: Build Vector DB Service
          no_output_timeout: 30m
          command: |
            echo "Building vector-db service..."
            
            # Create logs directory
            mkdir -p build-logs
            
            # Try the build up to 3 times to handle network failures
            max_attempts=3
            attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "Build attempt $attempt of $max_attempts"
              
              # Only build for amd64 to speed up build time
              set -o pipefail && DOCKER_BUILDKIT=1 docker buildx build \
                --platform linux/amd64 \
                --build-arg BUILDKIT_INLINE_CACHE=1 \
                --build-arg NODE_ENV=production \
                --progress=plain \
                --memory=8g \
                --cache-from type=registry,ref=registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:buildcache \
                --cache-from registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:latest \
                --cache-from registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:PRODUCTION \
                --cache-to type=registry,ref=registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:buildcache,mode=max \
                -t registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:latest \
                -t registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:PRODUCTION \
                -t registry.digitalocean.com/${DO_REGISTRY_NAME}/posey-vector-db:$(echo $CIRCLE_SHA1 | cut -c1-7) \
                -f data/vector-db/Dockerfile \
                --push \
                ./data/vector-db 2>&1 | tee build-logs/build-attempt-$attempt.log
                
              if [ ${PIPESTATUS[0]} -eq 0 ]; then
                echo "Build succeeded on attempt $attempt"
                cp build-logs/build-attempt-$attempt.log build-logs/build.log
                break
              else
                echo "Build failed on attempt $attempt"
                if [ $attempt -eq $max_attempts ]; then
                  echo "All build attempts failed"
                  cp build-logs/build-attempt-$attempt.log build-logs/build.log
                  exit 1
                fi
                attempt=$((attempt+1))
                echo "Waiting 60 seconds before next attempt..."
                sleep 60
              fi
            done
      - common/install-kubectl
      - common/setup-kubeconfig
      - run:
          name: Trigger ArgoCD sync for Vector DB
          command: |
            # Install argocd CLI if needed
            curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
            chmod +x argocd
            sudo mv argocd /usr/local/bin/
            
            # Log in to ArgoCD (using token auth)
            argocd login ${ARGOCD_SERVER} --auth-token ${ARGOCD_TOKEN} --grpc-web
            
            # Trigger sync for the vector-db application
            argocd app sync posey-vector-db --force
            
            # Wait for sync to complete
            argocd app wait posey-vector-db --health --timeout 300
      - store_artifacts:
          path: build-logs
          destination: build-logs 