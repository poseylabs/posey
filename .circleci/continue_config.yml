# This is the main CircleCI configuration file.
# It uses parameters set by the path-filtering job in .circleci/config.yml
# to determine which workflows to run.

version: 2.1

# Define organization-level orbs
orbs:
  common: posey/common@0.4.14 # Replace with actual version
  docker: posey/docker@0.1.0 # Replace with actual version

parameters:
  # Control parameters (set by path-filtering job)
  run-all-workflows: # Triggers all workflows
    type: boolean
    default: false
  run-common-orb-publish:
    type: boolean
    default: false
  run-docker-orb-publish:
    type: boolean
    default: false
  run-core-service-orb-publish:
    type: boolean
    default: false
  run-core-service-workflow:
    type: boolean
    default: false
  run-data-service-orb-publish:
    type: boolean
    default: false
  run-data-service-workflow:
    type: boolean
    default: false
  run-frontend-app-orb-publish:
    type: boolean
    default: false
  run-frontend-app-workflow:
    type: boolean
    default: false
  run-ui-pkg-orb-publish:
    type: boolean
    default: false
  run-ui-pkg-workflow:
    type: boolean
    default: false
  # Add other control parameters here

workflows:
  # Workflow for publishing common orbs
  publish-common-orbs:
    when:
      or:
        - << pipeline.parameters.run-all-workflows >>
        - << pipeline.parameters.run-common-orb-publish >>
        - << pipeline.parameters.run-docker-orb-publish >>
    jobs:
      - common/publish-orb:
          orb-path: .circleci/orbs/common/common-orb.yml
          orb-name: posey/common
          context:
            - posey-secrets # Assuming a context for CircleCI API token
          filters:
            branches:
              only: main # Only publish from main branch
      - common/publish-orb:
          orb-path: .circleci/orbs/docker/docker-orb.yml
          orb-name: posey/docker
          context:
            - posey-secrets
          filters:
            branches:
              only: main
          requires:
            - common/publish-orb # Example of dependency if needed

  # Workflow for the Core Service
  core-service:
    when:
      or:
        - << pipeline.parameters.run-all-workflows >>
        - << pipeline.parameters.run-core-service-workflow >>
    jobs:
      - docker/build-push:
          dockerfile-path: services/core/Dockerfile
          image-name: posey/core-service # Match repository in Helm chart/ArgoCD
          context:
            - posey-prod-core # Context with Docker registry credentials
          filters:
            branches:
              only: main # Only build/push from main

  # Workflow for the Data Service
  data-service:
    when:
      or:
        - << pipeline.parameters.run-all-workflows >>
        - << pipeline.parameters.run-data-service-workflow >>
    jobs:
      - docker/build-push:
          dockerfile-path: services/data/Dockerfile
          image-name: posey/data-service
          context:
            - posey-prod-data # Separate context for data service secrets
          filters:
            branches:
              only: main
      # Optional deployment job

  # Workflow for the Frontend Application
  frontend-app:
    when:
      or:
        - << pipeline.parameters.run-all-workflows >>
        - << pipeline.parameters.run-frontend-app-workflow >>
    jobs:
      - docker/build-push: # Assuming frontend is also containerized
          dockerfile-path: apps/frontend/Dockerfile
          image-name: posey/frontend-app
          context:
            - posey-prod-apps # Context for app secrets
          filters:
            branches:
              only: main
      # Optional deployment job

  # Workflow for the UI Package (Example: Build and test)
  ui-package:
    when:
      or:
        - << pipeline.parameters.run-all-workflows >>
        - << pipeline.parameters.run-ui-pkg-workflow >>
    jobs:
      - common/yarn-install-build-test: # Example job from common orb
          working-directory: packages/ui
          # Add context if needed for private npm packages etc.
          # context: posey-npm
          filters:
            branches:
              ignore: /.*/ # Typically only run on PRs or specific triggers, not push to main
