version: 2.1

# Define this as a setup configuration
setup: true

orbs:
  path-filtering: circleci/path-filtering@1.1.0

# Set up organization-level orbs
orbs-dir: .circleci/orbs
orbs-settings:
  namespace: posey

# Define pipeline parameters that will be passed to the continuation configuration
parameters:
  run-workflow:
    default: true
    type: boolean
  # Optional: Specify a GHA release tag or branch override, default is latest
  gha_release_tag:
    type: string
    default: "latest"
  orb-version-type:
    description: "Version type for orb publishing (patch, minor, major)"
    type: enum
    enum: ["patch", "minor", "major"]
    default: "patch"
  run-postgres-workflow:
    type: boolean
    default: false
  run-common-change-workflow:
    description: "Run the combined workflow when the common orb changes"
    type: boolean
    default: false
  run-qdrant-workflow:
    type: boolean
    default: false
  run-couchbase-workflow:
    type: boolean
    default: false
  run-mcp-workflow:
    type: boolean
    default: false
  run-auth-workflow:
    type: boolean
    default: false
  run-supertokens-workflow:
    type: boolean
    default: false
  run-cron-workflow: # Added for cron service
    type: boolean
    default: false
  run-voyager-workflow:
    type: boolean
    default: false
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Sha:
    type: string
    default: ""
  GHA_Ref:
    type: string
    default: ""

workflows:
  # Path-based filtering to determine what to build
  path-filtering:
    jobs:
      - path-filtering/filter:
          pre-steps:
            - run:
                name: Install yq
                command: |
                  curl -L https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -o /tmp/yq
                  chmod +x /tmp/yq
                  sudo mv /tmp/yq /usr/local/bin/yq
                  yq --version
            - checkout
            - run:
                name: Detect version bump type from commit message
                command: |
                  # Default is patch
                  VERSION_TYPE="patch"
                  
                  # Get the commit message
                  COMMIT_MSG=$(git log -1 --pretty=%B)
                  
                  # Check for version bump flags in commit message
                  if echo "$COMMIT_MSG" | grep -q "\[major\]"; then
                    VERSION_TYPE="major"
                  elif echo "$COMMIT_MSG" | grep -q "\[minor\]"; then
                    VERSION_TYPE="minor"
                  elif echo "$COMMIT_MSG" | grep -q "\[patch\]"; then
                    VERSION_TYPE="patch"
                  fi
                  
                  echo "Using version type: $VERSION_TYPE"
                  # Pass to the CircleCI configuration
                  echo "export PARAM_ORB_VERSION_TYPE=$VERSION_TYPE" >> $BASH_ENV
          name: check-updated-files
          mapping: |
            ############################################################
            # DATA SERVICES
            ############################################################

            # Postgres
            services/data/postgres/.* run-postgres-workflow true
            .circleci/orbs/data-postgres-orb.yml run-postgres-workflow true
            
            # Qdrant
            services/data/qdrant/.* run-qdrant-workflow true
            .circleci/orbs/data-qdrant-orb.yml run-qdrant-workflow true
            
            # Couchbase
            services/data/couchbase/.* run-couchbase-workflow true
            .circleci/orbs/data-couchbase-orb.yml run-couchbase-workflow true

            ############################################################
            # CORE SERVICES
            ############################################################
            
            # Auth
            services/core/auth/.* run-auth-workflow true
            .circleci/orbs/service-auth-orb.yml run-auth-workflow true
            
            # Cron 
            services/core/cron/.* run-cron-workflow true
            .circleci/orbs/service-cron-orb.yml run-cron-workflow true

            # MCP
            services/core/mcp/.* run-mcp-workflow true
            .circleci/orbs/service-mcp-orb.yml run-mcp-workflow true

            # SuperTokens
            services/core/supertokens/.* run-supertokens-workflow true
            .circleci/orbs/service-supertokens-orb.yml run-supertokens-workflow true

            # Voyager
            services/core/voyager/.* run-voyager-workflow true
            .circleci/orbs/service-voyager-orb.yml run-voyager-workflow true

            # Common orb change triggers the dedicated parameter
            .circleci/orbs/common-orb.yml run-common-change-workflow true

            # This workflow triggers the actual workflows in continue_config.yml
            # based on file changes.
            determine-workflow:
              jobs:
                - path-filtering/filter:
                    name: check-updated-files
                    # 3-column, whitespace-delimited mapping.
                    # 1st column: A regex to match the changed file path.
                    # 2nd column: The pipeline parameter that should be set to "true".
                    #             This parameter is defined in continue_config.yml.
                    # 3rd column: The value of the pipeline parameter. Typically "true".
                    mapping: |
                      # Common infrastructure changes trigger all relevant workflows
                      \.circleci/orbs/common/.* run-common-orb-publish true
                      \.circleci/orbs/docker/.* run-docker-orb-publish true
                      \.circleci/config.yml run-all-workflows true # Changes to this file trigger everything
                      \.circleci/continue_config.yml run-all-workflows true # Changes to this file trigger everything
                      lib/scripts/publish-orbs-local.sh run-all-workflows true # Orb publishing script changes
                      k8s/argo/root-argo-config.yaml run-all-workflows true # Root Argo config change
                      k8s/argo/.* run-all-workflows true # Any Argo config change (conservative)

                      # Core Service Orb & Code
                      \.circleci/orbs/service-core-orb.yml run-core-service-orb-publish true
                      services/core/src/.* run-core-service-workflow true
                      services/core/Dockerfile run-core-service-workflow true
                      services/core/requirements.txt run-core-service-workflow true
                      k8s/charts/services/core/core/.* run-core-service-workflow true

                      # Voyager Service Orb & Code
                      \.circleci/orbs/service-voyager-orb.yml run-voyager-service-orb-publish true
                      services/core/voyager/src/.* run-voyager-service-workflow true
                      services/core/voyager/Dockerfile run-voyager-service-workflow true
                      services/core/voyager/requirements.txt run-voyager-service-workflow true
                      k8s/charts/services/core/voyager/.* run-voyager-service-workflow true
                      k8s/argo/services/core/posey-voyager-application.yaml run-voyager-service-workflow true

                      # Data Service Orb & Code
                      \.circleci/orbs/service-data-orb.yml run-data-service-orb-publish true
                      services/data/src/.* run-data-service-workflow true
                      services/data/Dockerfile run-data-service-workflow true
                      services/data/requirements.txt run-data-service-workflow true
                      k8s/charts/services/data/.* run-data-service-workflow true

                      # Frontend App Orb & Code
                      \.circleci/orbs/app-frontend-orb.yml run-frontend-app-orb-publish true
                      apps/frontend/.* run-frontend-app-workflow true
                      k8s/charts/apps/frontend/.* run-frontend-app-workflow true

                      # UI Package Orb & Code
                      \.circleci/orbs/pkg-ui-orb.yml run-ui-pkg-orb-publish true
                      packages/ui/.* run-ui-pkg-workflow true # Any change in UI package triggers its workflow

                      # Add mappings for other services/apps/packages here following the pattern
                      # path/to/code/.* parameter-name true
                      # path/to/helm/chart/.* parameter-name true
                      # .circleci/orbs/your-orb.yml orb-parameter-name true
                    base-revision: main
                    config-path: .circleci/continue_config.yml
          base-revision: main
          # This is the path to the configuration file that will be used for the continuation
          config-path: .circleci/continue_config.yml
          post-steps:
            - checkout
            - run:
                name: Update continue_config.yml with version type
                command: |
                  VERSION_TYPE="${PARAM_ORB_VERSION_TYPE:-patch}"
                  echo "Using version type: $VERSION_TYPE for orb publishing"
                  
                  # Create a temp file and update the orb-version-type parameter
                  sed "s/orb-version-type:.*/orb-version-type: \"$VERSION_TYPE\"/" .circleci/continue_config.yml > /tmp/new_config.yml
                  mv /tmp/new_config.yml .circleci/continue_config.yml
          filters:
            branches:
              only:
                - main
                - develop
            tags:
              only: /^v.*/ 