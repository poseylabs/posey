---
# Source: qdrant/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "posey-qdrant"
  labels:
    helm.sh/chart: qdrant-0.1.0
    app.kubernetes.io/name: qdrant
    app.kubernetes.io/instance: posey-qdrant
    app.kubernetes.io/part-of: posey
    app.kubernetes.io/version: "v1.9.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: qdrant/templates/service-headless.yaml
# Headless service for stable network IDs required by StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: posey-qdrant-headless
  labels:
    helm.sh/chart: qdrant-0.1.0
    app.kubernetes.io/name: qdrant
    app.kubernetes.io/instance: posey-qdrant
    app.kubernetes.io/part-of: posey
    app.kubernetes.io/version: "v1.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 6333
      targetPort: grpc
      protocol: TCP
      name: grpc
    - port: 1111
      targetPort: http
      protocol: TCP
      name: http
    # Add other ports if needed for inter-node communication (e.g., Qdrant clustering ports)
  clusterIP: None # Required for Headless service
  selector:
    app.kubernetes.io/name: qdrant
    app.kubernetes.io/instance: posey-qdrant
    app.kubernetes.io/part-of: posey
---
# Source: qdrant/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: posey-qdrant
  labels:
    helm.sh/chart: qdrant-0.1.0
    app.kubernetes.io/name: qdrant
    app.kubernetes.io/instance: posey-qdrant
    app.kubernetes.io/part-of: posey
    app.kubernetes.io/version: "v1.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6333
      targetPort: grpc
      protocol: TCP
      name: grpc
    - port: 1111
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: qdrant
    app.kubernetes.io/instance: posey-qdrant
    app.kubernetes.io/part-of: posey
---
# Source: qdrant/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: posey-qdrant
  labels:
    helm.sh/chart: qdrant-0.1.0
    app.kubernetes.io/name: qdrant
    app.kubernetes.io/instance: posey-qdrant
    app.kubernetes.io/part-of: posey
    app.kubernetes.io/version: "v1.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: posey-qdrant-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: qdrant
      app.kubernetes.io/instance: posey-qdrant
      app.kubernetes.io/part-of: posey
  template:
    metadata:
      labels:
        app.kubernetes.io/name: qdrant
        app.kubernetes.io/instance: posey-qdrant
        app.kubernetes.io/part-of: posey
    spec:
      serviceAccountName: "posey-qdrant"
      terminationGracePeriodSeconds: 10
      securityContext:
        {}
      containers:
        - name: qdrant
          securityContext:
            {}
          image: "docker.io/poseylabs/posey-qdrant:v1.9.0"
          # Use local pullPolicy, fallback to global, default to Always
          imagePullPolicy: IfNotPresent
          
          # --- TEMPORARY SIMPLIFICATION FOR DEBUGGING ---
          
          env:
            # Keep only one simple env var for testing
            - name: QDRANT__LOG__LEVEL
              value: "INFO"
            - name: QDRANT__SERVICE__HTTP_PORT
              value: "1111"
            - name: QDRANT__SERVICE__GRPC_PORT
              value: "6333"
            - name: QDRANT__TELEMETRY__DISABLED
              value: "true"
          # --- END TEMPORARY SIMPLIFICATION ---

          ports:
            - name: http
              containerPort: 1111
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            limits:
              cpu: "1"
              memory: "2Gi"
            requests:
              cpu: "500m"
              memory: "1Gi"
          volumeMounts:
            - name: qdrant-storage
              mountPath: /qdrant/storage
      # Volumes defined here are shared across all pods (if any needed besides PVC)
  # Define Volume Claim Templates for StatefulSet
  volumeClaimTemplates:
    - metadata:
        name: qdrant-storage
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
        storageClassName: "standard"
---
# Source: qdrant/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: posey-qdrant
  labels:
    helm.sh/chart: qdrant-0.1.0
    app.kubernetes.io/name: qdrant
    app.kubernetes.io/instance: posey-qdrant
    app.kubernetes.io/part-of: posey
    app.kubernetes.io/version: "v1.9.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        # Use the determined hostname
        - "qdrant.db.posey.ai"
      # Use the determined or provided secret name
      secretName: qdrant-db-posey-ai-tls
  rules:
    # Use the determined hostname
    - host: "qdrant.db.posey.ai"
      http:
        paths:
          # Use the determined or provided paths
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: posey-qdrant
                port:
                  # Use specified ingress port name, default to 'http'
                  name: http
