apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "argocd-ingress-ip"
    networking.gke.io/managed-certificates: "argocd-certificate"
    kubernetes.io/ingress.class: "gce"
    # Add FrontendConfig for HTTPS redirect
    networking.gke.io/v1beta1.FrontendConfig: "argocd-frontend-config"
    # Add BackendConfig for custom health checks
    cloud.google.com/backend-config: '{"default":"argocd-backend-config"}'
spec:
  rules:
  - host: argo.posey.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              # Service port 80 maps to container port 8080
              number: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: argocd-certificate
  namespace: argocd
spec:
  domains:
  - argo.posey.ai
---
# FrontendConfig for HTTP -> HTTPS redirection
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: argocd-frontend-config
  namespace: argocd
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: MOVED_PERMANENTLY_DEFAULT
---
# BackendConfig for custom health checks
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: argocd-backend-config
  namespace: argocd
spec:
  healthCheck:
    # Check the container's port
    port: 8080
    type: HTTP
    requestPath: /healthz
    # Optional: Keep other parameters aligned if needed
    # timeoutSec: 5
    # checkIntervalSec: 15
    # unhealthyThreshold: 2
    # healthyThreshold: 1 