# Default values for cron chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: posey/core-cron # Make sure this matches your image repository
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 2222 # Corresponds to CRON_PORT

ingress:
  enabled: false # Cron service likely doesn't need external ingress
  # className: ""
  # annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # hosts:
  #   - host: chart-example.local
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables for the cron container
# Values taken from services/core/cron/.env or defaults suitable for production
env:
  # CRON_PORT is derived from service.port above
  NODE_ENV: production
  # Update this to the correct internal service name and port for the agents service
  AGENTS_SERVICE_URL: http://agents-service.posey:5555
  MEMORY_PRUNING_SCHEDULE: "0 0 * * *"
  MEMORY_CONSOLIDATION_SCHEDULE: "0 4 * * *"
  CACHE_CLEANUP_SCHEDULE: "0 */6 * * *"
  MEMORY_STATS_SCHEDULE: "0 1 * * *"
  MEMORY_CONSOLIDATION_THRESHOLD: "5"
  MAX_MEMORY_AGE: "90"
  MEMORY_CACHE_TTL: "30000"
  LOG_LEVEL: info
  LOG_FILE_PATH: "" # Logging to stdout/stderr is preferred in containers

# Define environment variables that should come from secrets
envFromSecrets:
  # Assumes a secret named "posey-prod-core" exists (created via sync:secrets:cd)
  # and contains a key named CRON_API_KEY
  - secretName: posey-prod-core # Adjust if your secret has a different name
    values:
      API_KEY: CRON_API_KEY # The key within the Kubernetes secret 