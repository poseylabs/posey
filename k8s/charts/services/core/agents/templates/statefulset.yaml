apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "posey-agents.fullname" . }}
  labels:
    {{- include "posey-agents.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "posey-agents.fullname" . }}
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "posey-agents.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "posey-agents.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name | default (include "posey-agents.fullname" .) }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy | default .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: {{ .Values.service.ingressPortName | default "http" }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: LOG_LEVEL
              value: {{ .Values.configOverrides.logLevel | quote }}
            - name: TELEMETRY_DISABLED
              value: {{ .Values.configOverrides.telemetryDisabled | quote }}
          {{- if .Values.envFromSecret.enabled }}
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret.secretName }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.ingressPortName | default "http" }}
            initialDelaySeconds: 30
            periodSeconds: 300
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.ingressPortName | default "http" }}
            initialDelaySeconds: 40
            periodSeconds: 300
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.global.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
            {{- with .Values.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- with .Values.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}

  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "posey-agents.labels" . | nindent 10 }}
      spec:
        accessModes: [ "{{ .Values.persistence.accessMode }}" ]
        storageClassName: "{{ .Values.persistence.storageClassName }}"
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }} 