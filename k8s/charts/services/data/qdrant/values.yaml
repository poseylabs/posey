# Default values for qdrant chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/poseylabs/posey-qdrant
  pullPolicy: IfNotPresent
  # Overridden by Argo CD application parameter
  # Pin to a specific version for stability, e.g., "v1.9.0"
  tag: "v1.9.0" # Should match the Dockerfile FROM tag & Chart.yaml appVersion

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "posey-qdrant"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount token
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  # Default Qdrant ports. Ensure Qdrant is configured (via env vars) to listen on these.
  port: 6333 # Default Qdrant gRPC port (Standard)
  httpPort: 1111 # Default Qdrant HTTP port (Matches PORTS.md / old config.yaml)

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  storageClassName: "standard" # Or your specific StorageClass
  accessMode: ReadWriteOnce
  size: 10Gi
  mountPath: /qdrant/storage # Qdrant data directory (Matches old config.yaml)

# Qdrant specific configuration passed as environment variables
# These will override Qdrant's internal defaults.
# See Qdrant docs for available env vars (usually QDRANT__* or replacing . with __)
configOverrides:
  # grpcPort: "6333" # Explicitly set if needed, defaults internally
  # httpPort: "1111" # Explicitly set if needed, defaults internally based on service.httpPort
  logLevel: INFO
  telemetryDisabled: true # Matches old config.yaml

# Optionally load environment variables from a Kubernetes secret
# Useful for ports, API keys, or other configurations managed via sync:secrets
envFromSecret:
  enabled: false
  secretName: "posey-qdrant-config" # Name of the secret containing env vars

apiKey:
  enabled: true # Assume API key is generally needed
  # If envFromSecret is enabled and the secret contains the API key, secretName might not be needed here.
  # Otherwise, specify the secret containing the API key.
  secretName: posey-qdrant-apikey # Default secret name for the API key
  secretKey: api-key
  # Set value if not using a secret (NOT RECOMMENDED)
  # value: "your-api-key" 