apiVersion: batch/v1
kind: Job
metadata:
  name: hasura-migrations
  namespace: default
  labels:
    app: posey-graphql-migrations
    tier: auth
    service-type: auth
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: posey-graphql-migrations
        tier: auth
        service-type: auth
    spec:
      restartPolicy: OnFailure
      containers:
      - name: hasura-migrations
        image: hasura/graphql-engine:v2.36.0
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Wait for GraphQL to be ready
          echo "Waiting for Hasura GraphQL to start..."
          until curl -s http://posey-graphql:8080/healthz > /dev/null; do
            sleep 5
          done
          
          # Apply migrations (if any)
          # Note: For a production setup, you might want to use Hasura CLI
          # with a migration directory containing your SQL files
          echo "Applying Hasura migrations and metadata..."
          
          # Example of a minimal authentication table setup 
          # (customize this for your actual schema)
          curl -X POST http://posey-graphql:8080/v1/query \
            -H "Content-Type: application/json" \
            -H "X-Hasura-Admin-Secret: ${HASURA_ADMIN_SECRET}" \
            -d '{
              "type": "run_sql",
              "args": {
                "sql": "CREATE TABLE IF NOT EXISTS users (id UUID PRIMARY KEY, email TEXT UNIQUE NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(), updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW());"
              }
            }'
          
          echo "Hasura migrations completed!"
        env:
        - name: HASURA_ADMIN_SECRET
          valueFrom:
            secretKeyRef:
              name: hasura-credentials
              key: HASURA_ADMIN_SECRET 