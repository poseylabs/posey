apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: posey-qdrant
  namespace: default
  labels:
    app: posey-qdrant
    tier: database
spec:
  serviceName: posey-qdrant
  replicas: 1  # Single replica for Qdrant (consider HA setup for production)
  selector:
    matchLabels:
      app: posey-qdrant
  template:
    metadata:
      labels:
        app: posey-qdrant
        tier: database
    spec:
      containers:
      - name: qdrant
        image: qdrant/qdrant:v1.7.4  # Using stable version
        ports:
        - containerPort: 6333
          name: http
        - containerPort: 6334
          name: grpc
        # Resource limits and requests
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        env:
        - name: QDRANT__SERVICE__HTTP_PORT
          value: "6333"
        - name: QDRANT__SERVICE__GRPC_PORT
          value: "6334"
        - name: QDRANT__STORAGE__STORAGE_PATH
          value: "/qdrant/storage"
        # Volume mounting for persistent data
        volumeMounts:
        - name: qdrant-data
          mountPath: /qdrant/storage
        # Liveness probe to check if Qdrant is running
        livenessProbe:
          httpGet:
            path: /health
            port: 6333
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        # Readiness probe to check if Qdrant is ready to accept connections
        readinessProbe:
          httpGet:
            path: /health
            port: 6333
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: qdrant-data
        persistentVolumeClaim:
          claimName: qdrant-data 