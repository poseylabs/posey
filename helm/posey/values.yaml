# Posey Helm Chart Values
# Generated from .env files

# -----------------------------
# Core Application Settings
# -----------------------------
environment:
  nodeEnv: development
  debug: true
  nodeDebug: true

# Development mode (uses mock services with basic containers)
# Set to false to use actual service images from registry
devMode: false

# Image Configuration
image:
  # Using DigitalOcean registry
  registry: "registry.digitalocean.com/posey"
  tag: "latest"
  pullPolicy: "Always"  # Using Always for development to get latest changes
  imagePullSecrets:
    - name: "registry-digitalocean"  # This secret will be created by the doctl command

# API Keys (These would be populated from real values in production)
apikeys:
  anthropic: ""  # Will be provided separately
  openai: ""     # Will be provided separately
  supertokens: "" # Will be provided separately

# -----------------------------
# Service Ports & URLs
# -----------------------------
services:
  # Global service configuration
  serviceType: "ClusterIP"  # Options: "ClusterIP", "NodePort", "LoadBalancer"
  # Use NodePort or LoadBalancer to expose services externally, or leave as ClusterIP for internal-only access
  
  auth:
    port: 9999
    baseUrl: "http://posey-auth:9999"
    apiDomain: "http://posey-auth:9999"
    nodePort: 30999  # Used only if serviceType is NodePort
  mcp:
    port: 5050
    baseUrl: "http://posey-mcp:5050"
    nodePort: 30050  # Used only if serviceType is NodePort
  postgres:
    port: 3333
    host: "posey-postgres"
    user: "pocketdb"
  qdrant:
    port: 1111
    host: "posey-qdrant"
    collection: "voyager"
    domain: "posey-voyager"
  superTokens:
    port: 3567
    connectionUri: "http://posey-supertokens:3567"
  ui:
    baseUrl: "http://localhost:8888"
    port: 3000
  agents:
    port: 3001
    containerPort: 8080
    replicas: 1
  voyager:
    port: 3030
    baseUrl: "http://posey-voyager:3030"
  cron:
    port: 3040
    baseUrl: "http://posey-cron:3040"

# -----------------------------
# Security & Access Control
# -----------------------------
security:
  cookie:
    domain: ".posey.ai"
    sameSite: "lax"
  allowedOrigins: ["https://posey.ai", "http://localhost:5173", "http://127.0.0.1:5173", "http://localhost:5555", "http://127.0.0.1:5555", "http://localhost:8888", "http://127.0.0.1:8888"]
  allowedHosts: ["https://posey.ai", "http://localhost:5173", "http://127.0.0.1:5173", "http://localhost:5555", "http://127.0.0.1:5555", "http://localhost:8888", "http://127.0.0.1:8888"]

# -----------------------------
# Cron Schedules
# -----------------------------
cronSchedules:
  memoryPruning: "0 0 * * *"      # Daily at midnight
  memoryConsolidation: "0 4 * * *" # Daily at 4 AM
  cacheCleanup: "0 */6 * * *"      # Every 6 hours
  memoryStats: "0 1 * * *"         # Daily at 1 AM

# -----------------------------
# AI & ML Models
# -----------------------------
ai:
  embeddingModel: "thenlper/gte-large"
  embeddingCacheDir: "/app/models"
  agentNamespace: "1b671a64-40d5-491e-99b0-da01ff1f3341"
  downloadEmbeddings: false
  openaiModel: "gpt-4o-mini"

# -----------------------------
# Development & Runtime
# -----------------------------
development:
  docker:
    buildkit: true
    compose:
      build: true
  python:
    dontWriteBytecode: true
    unbuffered: true
    path: "/app/service"
  migrations:
    run: true
    seeds: false
    dropTables: false
  logging:
    level: "INFO"

# -----------------------------
# Database Settings
# -----------------------------
databases:
  postgres:
    password: ""  # Will be provided separately
    dbPosey: "posey"
    dbSupertokens: "supertokens"
    host: "posey-postgres"
    dsn: "postgresql://pocketdb:${POSTGRES_PASSWORD}@posey-postgres:3333"
    dsnPosey: "postgresql://pocketdb:${POSTGRES_PASSWORD}@posey-postgres:3333/posey"
    dsnSupertokens: "postgresql://pocketdb:${POSTGRES_PASSWORD}@posey-postgres:3333/supertokens"
  couchbase:
    user: "pocketdb"
    password: ""  # Will be provided separately
    bucket: "posey"
    url: "couchbase://posey-couchbase"
    adminUrl: "http://posey-couchbase:8091"
    scope: "_default"
    collection: "_default"
  qdrant:
    url: "http://posey-qdrant:1111"
    graphqlUrl: "http://posey-graphql:4000"

# ------------------------------
# Storage Configuration
# ------------------------------
storage:
  digitalOcean:
    bucket: "posey.files"
    region: "sfo3"
    originEndpoint: "https://sfo3.digitaloceanspaces.com"
    cdnEndpoint: "https://cdn.posey.ai"

# ------------------------------
# API Keys & Secrets (Values provided by secrets, not stored here)
# ------------------------------
secrets:
  # These placeholders will be filled by Kubernetes secrets
  postgres:
    password: "${POSTGRES_PASSWORD}"
  couchbase:
    password: "${COUCHBASE_PASSWORD}"
  jwt:
    secretKey: "${JWT_SECRET_KEY}"
    tokenExpireMinutes: 60
  digitalOcean:
    accessToken: "${DIGITALOCEAN_ACCESS_TOKEN}"
    storageBucketKey: "${DO_STORAGE_BUCKET_KEY}"
    storageBucketSecret: "${DO_STORAGE_BUCKET_SECRET}"
  ai:
    anthropicApiKey: "${ANTHROPIC_API_KEY}"
    openaiApiKey: "${OPENAI_API_KEY}"
    geminiApiKey: "${GEMINI_API_KEY}"
    stableDiffusionApiKey: "${STABLE_DIFFUSION_API_KEY}"
    stableDiffusionToken: "${STABLE_DIFFUSION_TOKEN}"
  google:
    clientId: "${GOOGLE_CLIENT_ID}"
    clientSecret: "${GOOGLE_CLIENT_SECRET}"
  flux:
    apiKey: "${FLUX_API_KEY}"
    apiUrl: "https://api.bfl.ml"
  superTokens:
    apiKey: "${SUPERTOKENS_API_KEY}"
  dashboard:
    apiKey: "${DASHBOARD_API_KEY}"
    admins: "jesse@posey.ai"

# ------------------------------
# Monitoring Configuration
# ------------------------------
monitoring:
  enabled: true 