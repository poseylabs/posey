apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-supertokens
  labels:
    app: {{ .Release.Name }}-supertokens
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}-supertokens
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-supertokens
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-supertokens
    spec:
      containers:
        - name: supertokens
          image: supertokens/supertokens-postgresql:6.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.services.superTokens.port }}
              name: http
          env:
            - name: POSTGRESQL_CONNECTION_URI
              value: {{ .Values.databases.postgres.dsnSupertokens | quote }}
            - name: API_KEYS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-api-secrets
                  key: supertokens-api-key
            - name: API_KEY_DYNAMIC
              value: "false"
            - name: DISABLE_TELEMETRY
              value: "true"
            - name: ERROR_LOG_MODE
              value: "very-detailed"
            - name: LOG_LEVEL
              value: "info"
            - name: INFO_LOG_PATH
              value: "null"
            - name: ERROR_LOG_PATH
              value: "null"
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          livenessProbe:
            httpGet:
              path: /hello
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /hello
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5 